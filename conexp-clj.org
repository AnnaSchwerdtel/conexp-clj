# -*- mode: org -*-
#+startup: content
#+startup: hidestars
#+filetags: CONEXP FUN
#+category: conexp

* Script
** TODO [#B] Update usage of tools.cli
** Archive                                                          :ARCHIVE:
*** DONE Add readline support
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
    using jline
* Lattice Drawing
** TODO [#B] Adjusting nodes in lattice diagram with parallelogram rule
* IO
** TODO [#B] draw-lattice-to-file
   We need some function (i.e. draw-lattice-to-file) which produces a
   file of the picture of a lattice layout, when given the same
   arguments as draw-lattice.

   For this we need some abstrace picture-drawing facility, which can
   produce pictures without showing them. For that we could use svg
   (also as output format for layouts) and simply write it to a file.
** TODO [#B] Allow additional arguments to write-context
   depending on the current layout.
** TODO [#B] More IO formats for contexts [2/5]
   - [X] anonymous burmeister (without names for objects and
     attributes)
   - [ ] csc
   - [ ] slf
   - [ ] csx
   - [X] binary csv
** TODO [#B] Lattice IO for csv and dot
   That should be simple for output, but non-trivial for input.
** TODO [#B] Add support for multiple contexts/... in IO
   I.e. a call like

     (write-context :conexp "/tmp/file" ctx-1 ctx-2 ctx-3)

   should be possible. read-context then should also take an index of
   which context to read in.
* Tests
** TODO [#B] Add tests for explicit IO formats
   given as keywords or strings.
** TODO [#B] Improve test coverage of conexp contrib [0/12]
   - [ ] algorithms
   - [ ] concept approximation
   - [ ] DL
   - [ ] draw (?)
   - [ ] exec
   - [ ] experimental
   - [ ] factor analysis
   - [ ] fuzzy [0/3]
     - [ ] logics
     - [ ] sets
     - [ ] fca
   - [ ] GUI (?)
   - [ ] Java
   - [ ] retracts
   - [ ] util [0/1]
     - [ ] general sorted sets
** TODO [#B] Add tests for new Association Rule functions
** TODO [#B] Add tests for exploration with incomplete counterexamples
* Layout
** TODO [#B] Add more layout output [0/2]
   - [ ] svg
   - [ ] povray
** TODO [#B] Rewrite to-inf-additive-layout
   As projection into the subspace of all infimum-additive layouts.
** TODO [#B] Implement Christians Force Layout with derivations
* Documentation
** NEXT [#B] Write Wiki [5/7]
   :LOGBOOK:
   CLOCK: [2014-04-25 Fri 09:49]--[2014-04-25 Fri 10:08] =>  0:19
   :END:
   - State "NEXT"       from "HOLD"       [2014-04-25 Fri 09:49]
   - State "HOLD"       from "NEXT"       [2014-03-10 Mon 08:19]
   :PROPERTIES:
   :Effort:   5:00
   :END:
   - [X] Getting Started
   - [X] Basic Notation and Syntax
   - [X] Basic Usage
     - [X] Creating and Working with Formal Contexts
     - [X] Concept Lattices
     - [X] IO
     - [X] Implications
     - [X] Exploration
     - [X] Scaling Many-Valued Contexts
   - [ ] Advanced Usage
     - [ ] Factorizing Formal Contexts
     - [ ] Fuzzy FCA in conexp-clj
   - [ ] Use cases of conexp-clj
     - [ ] A Formal Context of Functions
     - [ ] Context of All Permutations on a Finite Set
     - [ ] The Tamari Lattice
     - [ ] Counting all Quasi-Orders on an n-elemental set
   - [X] Other Features
     - [X] Using conexp-clj from sage
     - [X] Calling conexp-clj functions from Java
   - [X] API documentation
** Archive                                                          :ARCHIVE:
*** DONE API documentation on the Wiki
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
* Core
** TODO [#B] Change attribute names for mv-context scales
   They are somewhat arbitrary and may also be misleading. Don't
   forget to adjust the tests for them after finishing.
** TODO [#B] Rule Exploration with Impex
** TODO [#B] Incorporate clojure.core.reducers
   Make parallel:
   - [X] arrow computation
   - [ ] set-of — may actually not a very good idea …
** TODO [#B] Exploration: answer questions from within the repl
** TODO [#B] Allow expert to still accept an implication although she has denied it
   :LOGBOOK:
   CLOCK: [2013-12-16 Mon 10:11]--[2013-12-16 Mon 10:12] =>  0:01
   :END:
   [[gnus:nnmaildir%2Bzih:projects.ros#52A83E84.7070501@uni-rostock.de][Email from Johannes Wollbold: Re: fehler bei benutzung von s]]

** Archive                                                          :ARCHIVE:
*** DONE Make luxenburger-base parallel
    - State "DONE"       from "TODO"       [2013-10-08 Di 17:57] \\
      Using clojure.core.reducers/fold
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
*** DONE Unify interface to explore-attributes
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
*** DONE Add minimal-support constraints to canonical base computation
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
*** DONE Change ns-doc to docstrings in namespaces
    - State "DONE"       from "TODO"       [2013-11-08 Fri 13:07]
    :LOGBOOK:
    CLOCK: [2013-11-07 Thu 14:27]--[2013-11-07 Thu 14:28] =>  0:01
    :END:
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
    Added: [2013-11-07 Thu 14:27]
*** DONE Locate resources in a uniform way
    - State "DONE"       from "TODO"       [2014-08-18 Mon 13:41]
    :LOGBOOK:
    CLOCK: [2014-08-18 Mon 13:34]--[2014-08-18 Mon 13:41] =>  0:07
    CLOCK: [2014-08-18 Mon 09:18]--[2014-08-18 Mon 09:18] =>  0:00
    :END:
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
* GUI
** TODO [#B] Allow resizing of cells in GUI
   For this a special mouse handler has to be implemented that changes the cursor when
   resizing is possible.  Resizing itself must be done via setRowHeight() or one of
   TableColumns methods for setting the width of a column.
** TODO [#B] Use breakable tool bar for context editor
** TODO [#B] GUI context editor
** TODO [#B] GUI lattice editor
** TODO [#B] GUI code editor
** TODO [#B] GUI plugin browser
** TODO [#B] Undo for GUI
** Archive                                                          :ARCHIVE:
*** DONE Fix neverending rotation when choosing another tab
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
* Bugs
** Archive                                                          :ARCHIVE:
*** DONE Fix error for conexp-clj's gui
    - State "DONE"       from "TODO"       [2013-09-26 Do 15:25]
    CLOCK: [2013-08-21 Mi 12:39]--[2013-08-21 Mi 12:39] =>  0:00
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
    Added: [2013-08-21 Mi 12:39]
*** DONE conexp-clj: find out whether there is a bug in canonical-base with background knowledge
    - State "DONE"       from "NEXT"       [2013-09-04 Mi 18:02] \\
      Apparently, there was one: the computation of the canonical base with background
      knowledge unconditionally started with ∅ as the first premises, which is not correct if
      one has implications of the form ∅ ⇒ A for some A ⊆ M.  Fixed that, added some (small)
      test case for it and added Johannes as contributor to conexp-clj.
    - State "NEXT"       from "TODO"       [2013-09-04 Mi 17:10] \\
      Making first reasonability tests with the data from Johannes
    See Johannes information on this
    :LOGBOOK:
    CLOCK: [2013-09-04 Mi 17:11]--[2013-09-04 Mi 18:02] =>  0:51
    CLOCK: [2013-09-04 Mi 15:50]--[2013-09-04 Mi 15:51] =>  0:01
    :END:
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
    Added: [2013-09-04 Mi 15:50]

*** DONE Check whether counterexample is valid in incomplete exploration
    - State "DONE"       from "TODO"       [2013-09-30 Mo 14:02]
    :LOGBOOK:
    CLOCK: [2013-09-30 Mo 13:47]--[2013-09-30 Mo 14:02] =>  0:15
    :END:
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:

*** DONE improve-basic-order sometimes causes errors
    - State "DONE"       from "TODO"       [2013-10-10 Thu 14:36] \\
      Should not happen anymore: the reason supposely was that the original test was not
      transitive.  The new implementation just uses (lectic-< base (clop #{y}) (clop #{x})),
      which should be.  However, it remains to be checked whether this really is what
      improve-basic-order should do …
    :PROPERTIES:
    :ARCHIVE_TIME: 2014-09-29 Mon 10:06
    :END:
    Like 'Comparison method violates its general contract!'
